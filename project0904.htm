<!doctype html public "-//w3c//dtd html 4.0 transitional//en">
<html><head>
<title>Static Call Graph - [C:\Nuvoton\BSP Library\NUC100SeriesBSP_CMSIS_v1.05.003\NuvotonPlatform_Keil\Sample\NUC1xx-LB_002\KILLED-BY-GKC4A\project0904.axf]</title></head>
<body><HR>
<H1>Static Call Graph for image C:\Nuvoton\BSP Library\NUC100SeriesBSP_CMSIS_v1.05.003\NuvotonPlatform_Keil\Sample\NUC1xx-LB_002\KILLED-BY-GKC4A\project0904.axf</H1><HR>
<BR><P>#&#060CALLGRAPH&#062# ARM Linker, 4.1 [Build 894]: Last Updated: Sun Mar 24 00:08:23 2024
<BR><P>
<H3>Maximum Stack Usage =        120 bytes + Unknown(Functions without stacksize, Cycles, Untraceable Function Pointers)</H3><H3>
Call chain for Maximum Stack Depth:</H3>
__rt_entry_main &rArr; main &rArr; Init_Devices &rArr; Timer0_Init &rArr; DrvTIMER_Open &rArr; GetTimerClock &rArr; DrvSYS_GetHCLKFreq &rArr; DrvSYS_GetPLLClockFreq
<P>
<H3>
Functions with no stack information
</H3><UL>
 <LI><a href="#[2e]">__user_initial_stackheap</a>
</UL>
</UL>
<P>
<H3>
Mutually Recursive functions
</H3> <LI><a href="#[6]">NMI_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[6]">NMI_Handler</a><BR>
 <LI><a href="#[7]">HardFault_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[7]">HardFault_Handler</a><BR>
 <LI><a href="#[8]">SVC_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[8]">SVC_Handler</a><BR>
 <LI><a href="#[9]">PendSV_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[9]">PendSV_Handler</a><BR>
 <LI><a href="#[a]">SysTick_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[a]">SysTick_Handler</a><BR>
 <LI><a href="#[20]">Default_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[20]">Default_Handler</a><BR>
</UL>
<P>
<H3>
Function Pointers
</H3><UL>
 <LI><a href="#[23]">ACMP_IRQHandler</a> from startup_nuc1xx.o(.text) referenced from startup_nuc1xx.o(RESET)
 <LI><a href="#[27]">ADC_IRQHandler</a> from drvadc.o(i.ADC_IRQHandler) referenced from startup_nuc1xx.o(RESET)
 <LI><a href="#[b]">BOD_IRQHandler</a> from drvsys.o(i.BOD_IRQHandler) referenced from startup_nuc1xx.o(RESET)
 <LI><a href="#[1f]">CAN0_IRQHandler</a> from startup_nuc1xx.o(.text) referenced from startup_nuc1xx.o(RESET)
 <LI><a href="#[20]">Default_Handler</a> from startup_nuc1xx.o(.text) referenced 3 times from startup_nuc1xx.o(RESET)
 <LI><a href="#[d]">EINT0_IRQHandler</a> from drvgpio.o(i.EINT0_IRQHandler) referenced from startup_nuc1xx.o(RESET)
 <LI><a href="#[e]">EINT1_IRQHandler</a> from drvgpio.o(i.EINT1_IRQHandler) referenced from startup_nuc1xx.o(RESET)
 <LI><a href="#[f]">GPAB_IRQHandler</a> from drvgpio.o(i.GPAB_IRQHandler) referenced from startup_nuc1xx.o(RESET)
 <LI><a href="#[10]">GPCDE_IRQHandler</a> from drvgpio.o(i.GPCDE_IRQHandler) referenced from startup_nuc1xx.o(RESET)
 <LI><a href="#[7]">HardFault_Handler</a> from startup_nuc1xx.o(.text) referenced from startup_nuc1xx.o(RESET)
 <LI><a href="#[1d]">I2C0_IRQHandler</a> from startup_nuc1xx.o(.text) referenced from startup_nuc1xx.o(RESET)
 <LI><a href="#[1e]">I2C1_IRQHandler</a> from startup_nuc1xx.o(.text) referenced from startup_nuc1xx.o(RESET)
 <LI><a href="#[25]">I2S_IRQHandler</a> from startup_nuc1xx.o(.text) referenced from startup_nuc1xx.o(RESET)
 <LI><a href="#[6]">NMI_Handler</a> from startup_nuc1xx.o(.text) referenced from startup_nuc1xx.o(RESET)
 <LI><a href="#[24]">PDMA_IRQHandler</a> from startup_nuc1xx.o(.text) referenced from startup_nuc1xx.o(RESET)
 <LI><a href="#[22]">PS2_IRQHandler</a> from startup_nuc1xx.o(.text) referenced from startup_nuc1xx.o(RESET)
 <LI><a href="#[11]">PWMA_IRQHandler</a> from startup_nuc1xx.o(.text) referenced from startup_nuc1xx.o(RESET)
 <LI><a href="#[12]">PWMB_IRQHandler</a> from startup_nuc1xx.o(.text) referenced from startup_nuc1xx.o(RESET)
 <LI><a href="#[26]">PWRWU_IRQHandler</a> from drvsys.o(i.PWRWU_IRQHandler) referenced from startup_nuc1xx.o(RESET)
 <LI><a href="#[9]">PendSV_Handler</a> from startup_nuc1xx.o(.text) referenced from startup_nuc1xx.o(RESET)
 <LI><a href="#[28]">RTC_IRQHandler</a> from startup_nuc1xx.o(.text) referenced from startup_nuc1xx.o(RESET)
 <LI><a href="#[2c]">Reset_Handler</a> from startup_nuc1xx.o(.text) referenced from startup_nuc1xx.o(RESET)
 <LI><a href="#[19]">SPI0_IRQHandler</a> from drvspi.o(i.SPI0_IRQHandler) referenced from startup_nuc1xx.o(RESET)
 <LI><a href="#[1a]">SPI1_IRQHandler</a> from drvspi.o(i.SPI1_IRQHandler) referenced from startup_nuc1xx.o(RESET)
 <LI><a href="#[1b]">SPI2_IRQHandler</a> from drvspi.o(i.SPI2_IRQHandler) referenced from startup_nuc1xx.o(RESET)
 <LI><a href="#[1c]">SPI3_IRQHandler</a> from drvspi.o(i.SPI3_IRQHandler) referenced from startup_nuc1xx.o(RESET)
 <LI><a href="#[8]">SVC_Handler</a> from startup_nuc1xx.o(.text) referenced from startup_nuc1xx.o(RESET)
 <LI><a href="#[a]">SysTick_Handler</a> from startup_nuc1xx.o(.text) referenced from startup_nuc1xx.o(RESET)
 <LI><a href="#[29]">SystemInit</a> from system_nuc1xx.o(i.SystemInit) referenced from startup_nuc1xx.o(.text)
 <LI><a href="#[13]">TMR0_IRQHandler</a> from drvtimer.o(i.TMR0_IRQHandler) referenced from startup_nuc1xx.o(RESET)
 <LI><a href="#[14]">TMR1_IRQHandler</a> from drvtimer.o(i.TMR1_IRQHandler) referenced from startup_nuc1xx.o(RESET)
 <LI><a href="#[15]">TMR2_IRQHandler</a> from drvtimer.o(i.TMR2_IRQHandler) referenced from startup_nuc1xx.o(RESET)
 <LI><a href="#[16]">TMR3_IRQHandler</a> from drvtimer.o(i.TMR3_IRQHandler) referenced from startup_nuc1xx.o(RESET)
 <LI><a href="#[2b]">Timer0_Callback</a> from mainsource0728ver2.o(i.Timer0_Callback) referenced from mainsource0728ver2.o(i.Timer0_Init)
 <LI><a href="#[17]">UART02_IRQHandler</a> from startup_nuc1xx.o(.text) referenced from startup_nuc1xx.o(RESET)
 <LI><a href="#[18]">UART1_IRQHandler</a> from startup_nuc1xx.o(.text) referenced from startup_nuc1xx.o(RESET)
 <LI><a href="#[21]">USBD_IRQHandler</a> from startup_nuc1xx.o(.text) referenced from startup_nuc1xx.o(RESET)
 <LI><a href="#[c]">WDT_IRQHandler</a> from drvtimer.o(i.WDT_IRQHandler) referenced from startup_nuc1xx.o(RESET)
 <LI><a href="#[2d]">__main</a> from __main.o(!!!main) referenced from startup_nuc1xx.o(.text)
</UL>
<P>
<H3>
Global Symbols
</H3>
<P><STRONG><a name="[2d]"></a>__main</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, __main.o(!!!main))
<BR><BR>[Calls]<UL><LI><a href="#[2f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload
<LI><a href="#[30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry
</UL>

<P><STRONG><a name="[2f]"></a>__scatterload</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __scatter.o(!!!scatter))
<BR><BR>[Called By]<UL><LI><a href="#[2d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__main
</UL>

<P><STRONG><a name="[31]"></a>__scatterload_rt2</STRONG> (Thumb, 52 bytes, Stack size unknown bytes, __scatter.o(!!!scatter), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry
</UL>

<P><STRONG><a name="[82]"></a>__scatterload_rt2_thumb_only</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __scatter.o(!!!scatter), UNUSED)

<P><STRONG><a name="[83]"></a>__scatterload_null</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __scatter.o(!!!scatter), UNUSED)

<P><STRONG><a name="[32]"></a>__scatterload_copy</STRONG> (Thumb, 26 bytes, Stack size unknown bytes, __scatter_copy.o(!!handler_copy), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[32]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload_copy
</UL>
<BR>[Called By]<UL><LI><a href="#[32]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload_copy
</UL>

<P><STRONG><a name="[84]"></a>__scatterload_zeroinit</STRONG> (Thumb, 28 bytes, Stack size unknown bytes, __scatter_zi.o(!!handler_zi), UNUSED)

<P><STRONG><a name="[36]"></a>__rt_lib_init</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit.o(.ARM.Collect$$libinit$$00000000))
<BR><BR>[Called By]<UL><LI><a href="#[35]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry_li
</UL>

<P><STRONG><a name="[85]"></a>__rt_lib_init_alloca_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000002A))

<P><STRONG><a name="[86]"></a>__rt_lib_init_argv_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000028))

<P><STRONG><a name="[87]"></a>__rt_lib_init_atexit_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000017))

<P><STRONG><a name="[88]"></a>__rt_lib_init_clock_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000001D))

<P><STRONG><a name="[89]"></a>__rt_lib_init_cpp_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000002E))

<P><STRONG><a name="[8a]"></a>__rt_lib_init_exceptions_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000002C))

<P><STRONG><a name="[8b]"></a>__rt_lib_init_fp_trap_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000001B))

<P><STRONG><a name="[8c]"></a>__rt_lib_init_getenv_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000001F))

<P><STRONG><a name="[8d]"></a>__rt_lib_init_heap_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000006))

<P><STRONG><a name="[8e]"></a>__rt_lib_init_lc_collate_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000000D))

<P><STRONG><a name="[8f]"></a>__rt_lib_init_lc_ctype_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000000F))

<P><STRONG><a name="[90]"></a>__rt_lib_init_lc_monetary_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000011))

<P><STRONG><a name="[91]"></a>__rt_lib_init_lc_numeric_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000013))

<P><STRONG><a name="[92]"></a>__rt_lib_init_lc_time_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000015))

<P><STRONG><a name="[93]"></a>__rt_lib_init_rand_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000000A))

<P><STRONG><a name="[94]"></a>__rt_lib_init_return</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000002F))

<P><STRONG><a name="[95]"></a>__rt_lib_init_signal_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000019))

<P><STRONG><a name="[96]"></a>__rt_lib_init_stdio_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000021))

<P><STRONG><a name="[97]"></a>__rt_lib_init_user_alloc_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000008))

<P><STRONG><a name="[3b]"></a>__rt_lib_shutdown</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown.o(.ARM.Collect$$libshutdown$$00000000))
<BR><BR>[Called By]<UL><LI><a href="#[3a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_exit_ls
</UL>

<P><STRONG><a name="[98]"></a>__rt_lib_shutdown_fp_trap_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$00000006))

<P><STRONG><a name="[99]"></a>__rt_lib_shutdown_heap_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$0000000E))

<P><STRONG><a name="[9a]"></a>__rt_lib_shutdown_return</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$0000000F))

<P><STRONG><a name="[9b]"></a>__rt_lib_shutdown_signal_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$00000009))

<P><STRONG><a name="[9c]"></a>__rt_lib_shutdown_stdio_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$00000003))

<P><STRONG><a name="[9d]"></a>__rt_lib_shutdown_user_alloc_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$0000000B))

<P><STRONG><a name="[30]"></a>__rt_entry</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rtentry.o(.ARM.Collect$$rtentry$$00000000))
<BR><BR>[Called By]<UL><LI><a href="#[31]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload_rt2
<LI><a href="#[2d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__main
</UL>

<P><STRONG><a name="[9e]"></a>__rt_entry_presh_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rtentry2.o(.ARM.Collect$$rtentry$$00000002))

<P><STRONG><a name="[33]"></a>__rt_entry_sh</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rtentry4.o(.ARM.Collect$$rtentry$$00000004))
<BR><BR>[Stack]<UL><LI>Max Depth = 8 + Unknown Stack Size
<LI>Call Chain = __rt_entry_sh &rArr; __user_setup_stackheap
</UL>
<BR>[Calls]<UL><LI><a href="#[34]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__user_setup_stackheap
</UL>

<P><STRONG><a name="[35]"></a>__rt_entry_li</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rtentry2.o(.ARM.Collect$$rtentry$$0000000A))
<BR><BR>[Calls]<UL><LI><a href="#[36]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_lib_init
</UL>

<P><STRONG><a name="[9f]"></a>__rt_entry_postsh_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rtentry2.o(.ARM.Collect$$rtentry$$00000009))

<P><STRONG><a name="[37]"></a>__rt_entry_main</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rtentry2.o(.ARM.Collect$$rtentry$$0000000D))
<BR><BR>[Stack]<UL><LI>Max Depth = 120 + Unknown Stack Size
<LI>Call Chain = __rt_entry_main &rArr; main &rArr; Init_Devices &rArr; Timer0_Init &rArr; DrvTIMER_Open &rArr; GetTimerClock &rArr; DrvSYS_GetHCLKFreq &rArr; DrvSYS_GetPLLClockFreq
</UL>
<BR>[Calls]<UL><LI><a href="#[38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[39]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;exit
</UL>

<P><STRONG><a name="[a0]"></a>__rt_entry_postli_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rtentry2.o(.ARM.Collect$$rtentry$$0000000C))

<P><STRONG><a name="[40]"></a>__rt_exit</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rtexit.o(.ARM.Collect$$rtexit$$00000000))
<BR><BR>[Called By]<UL><LI><a href="#[39]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;exit
</UL>

<P><STRONG><a name="[3a]"></a>__rt_exit_ls</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rtexit2.o(.ARM.Collect$$rtexit$$00000003))
<BR><BR>[Calls]<UL><LI><a href="#[3b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_lib_shutdown
</UL>

<P><STRONG><a name="[a1]"></a>__rt_exit_prels_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rtexit2.o(.ARM.Collect$$rtexit$$00000002))

<P><STRONG><a name="[3c]"></a>__rt_exit_exit</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rtexit2.o(.ARM.Collect$$rtexit$$00000004))
<BR><BR>[Calls]<UL><LI><a href="#[3d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_sys_exit
</UL>

<P><STRONG><a name="[2c]"></a>Reset_Handler</STRONG> (Thumb, 32 bytes, Stack size 0 bytes, startup_nuc1xx.o(.text))

<P><STRONG><a name="[6]"></a>NMI_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_nuc1xx.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NMI_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NMI_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_nuc1xx.o(RESET)
</UL>
<P><STRONG><a name="[7]"></a>HardFault_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_nuc1xx.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HardFault_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HardFault_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_nuc1xx.o(RESET)
</UL>
<P><STRONG><a name="[8]"></a>SVC_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_nuc1xx.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SVC_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SVC_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_nuc1xx.o(RESET)
</UL>
<P><STRONG><a name="[9]"></a>PendSV_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_nuc1xx.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PendSV_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PendSV_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_nuc1xx.o(RESET)
</UL>
<P><STRONG><a name="[a]"></a>SysTick_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_nuc1xx.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysTick_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysTick_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_nuc1xx.o(RESET)
</UL>
<P><STRONG><a name="[23]"></a>ACMP_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_nuc1xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_nuc1xx.o(RESET)
</UL>
<P><STRONG><a name="[1f]"></a>CAN0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_nuc1xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_nuc1xx.o(RESET)
</UL>
<P><STRONG><a name="[1d]"></a>I2C0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_nuc1xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_nuc1xx.o(RESET)
</UL>
<P><STRONG><a name="[1e]"></a>I2C1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_nuc1xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_nuc1xx.o(RESET)
</UL>
<P><STRONG><a name="[25]"></a>I2S_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_nuc1xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_nuc1xx.o(RESET)
</UL>
<P><STRONG><a name="[24]"></a>PDMA_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_nuc1xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_nuc1xx.o(RESET)
</UL>
<P><STRONG><a name="[22]"></a>PS2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_nuc1xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_nuc1xx.o(RESET)
</UL>
<P><STRONG><a name="[11]"></a>PWMA_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_nuc1xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_nuc1xx.o(RESET)
</UL>
<P><STRONG><a name="[12]"></a>PWMB_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_nuc1xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_nuc1xx.o(RESET)
</UL>
<P><STRONG><a name="[28]"></a>RTC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_nuc1xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_nuc1xx.o(RESET)
</UL>
<P><STRONG><a name="[17]"></a>UART02_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_nuc1xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_nuc1xx.o(RESET)
</UL>
<P><STRONG><a name="[18]"></a>UART1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_nuc1xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_nuc1xx.o(RESET)
</UL>
<P><STRONG><a name="[21]"></a>USBD_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_nuc1xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_nuc1xx.o(RESET)
</UL>
<P><STRONG><a name="[2e]"></a>__user_initial_stackheap</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, startup_nuc1xx.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[34]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__user_setup_stackheap
</UL>

<P><STRONG><a name="[a2]"></a>__aeabi_uidiv</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, aeabi_sdiv.o(.text), UNUSED)

<P><STRONG><a name="[42]"></a>__aeabi_uidivmod</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, aeabi_sdiv.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrvSYS_GetPLLClockFreq
<LI><a href="#[45]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrvSYS_GetHCLKFreq
<LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setup_AD9850
<LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;itoafreq
<LI><a href="#[48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemCoreClockUpdate
<LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CalTimerInitValue
</UL>

<P><STRONG><a name="[a3]"></a>__aeabi_idiv</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, aeabi_sdiv.o(.text), UNUSED)

<P><STRONG><a name="[a4]"></a>__aeabi_idivmod</STRONG> (Thumb, 326 bytes, Stack size 8 bytes, aeabi_sdiv.o(.text), UNUSED)

<P><STRONG><a name="[a5]"></a>__use_two_region_memory</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, heapauxi.o(.text), UNUSED)

<P><STRONG><a name="[a6]"></a>__rt_heap_escrow$2region</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, heapauxi.o(.text), UNUSED)

<P><STRONG><a name="[a7]"></a>__rt_heap_expand$2region</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, heapauxi.o(.text), UNUSED)

<P><STRONG><a name="[34]"></a>__user_setup_stackheap</STRONG> (Thumb, 62 bytes, Stack size 8 bytes, sys_stackheap_outer.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8 + Unknown Stack Size
<LI>Call Chain = __user_setup_stackheap
</UL>
<BR>[Calls]<UL><LI><a href="#[2e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__user_initial_stackheap
<LI><a href="#[3e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__user_perproc_libspace
</UL>
<BR>[Called By]<UL><LI><a href="#[33]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry_sh
</UL>

<P><STRONG><a name="[39]"></a>exit</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, exit.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_exit
<LI><a href="#[3f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_call_atexit_fns (Weak Reference)
</UL>
<BR>[Called By]<UL><LI><a href="#[37]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry_main
</UL>

<P><STRONG><a name="[a8]"></a>__user_libspace</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, libspace.o(.text), UNUSED)

<P><STRONG><a name="[3e]"></a>__user_perproc_libspace</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, libspace.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[34]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__user_setup_stackheap
</UL>

<P><STRONG><a name="[a9]"></a>__user_perthread_libspace</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, libspace.o(.text), UNUSED)

<P><STRONG><a name="[3d]"></a>_sys_exit</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, sys_exit.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_exit_exit
</UL>

<P><STRONG><a name="[aa]"></a>__I$use$semihosting</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, use_no_semi.o(.text), UNUSED)

<P><STRONG><a name="[ab]"></a>__use_no_semihosting_swi</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, use_no_semi.o(.text), UNUSED)

<P><STRONG><a name="[ac]"></a>__semihosting_library_function</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, indicate_semi.o(.text), UNUSED)

<P><STRONG><a name="[27]"></a>ADC_IRQHandler</STRONG> (Thumb, 136 bytes, Stack size 8 bytes, drvadc.o(i.ADC_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = ADC_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_nuc1xx.o(RESET)
</UL>
<P><STRONG><a name="[b]"></a>BOD_IRQHandler</STRONG> (Thumb, 36 bytes, Stack size 8 bytes, drvsys.o(i.BOD_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = BOD_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_nuc1xx.o(RESET)
</UL>
<P><STRONG><a name="[66]"></a>DECREASE_detect</STRONG> (Thumb, 100 bytes, Stack size 0 bytes, mainsource0728ver2.o(i.DECREASE_detect))
<BR><BR>[Called By]<UL><LI><a href="#[2b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Timer0_Callback
</UL>

<P><STRONG><a name="[63]"></a>DOWN_detect</STRONG> (Thumb, 52 bytes, Stack size 0 bytes, mainsource0728ver2.o(i.DOWN_detect))
<BR><BR>[Called By]<UL><LI><a href="#[2b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Timer0_Callback
</UL>

<P><STRONG><a name="[52]"></a>DrvADC_Open</STRONG> (Thumb, 214 bytes, Stack size 20 bytes, drvadc.o(i.DrvADC_Open))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = DrvADC_Open
</UL>
<BR>[Called By]<UL><LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Init_Devices
</UL>

<P><STRONG><a name="[5c]"></a>DrvGPIO_ClrBit</STRONG> (Thumb, 36 bytes, Stack size 8 bytes, drvgpio.o(i.DrvGPIO_ClrBit))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = DrvGPIO_ClrBit
</UL>
<BR>[Called By]<UL><LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setup_AD9850
<LI><a href="#[38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ad9850_wr_parrel
<LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ad9850_reset
<LI><a href="#[2b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Timer0_Callback
<LI><a href="#[5a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Scankey
</UL>

<P><STRONG><a name="[5e]"></a>DrvGPIO_GetBit</STRONG> (Thumb, 32 bytes, Stack size 8 bytes, drvgpio.o(i.DrvGPIO_GetBit))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = DrvGPIO_GetBit
</UL>
<BR>[Called By]<UL><LI><a href="#[5a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Scankey
</UL>

<P><STRONG><a name="[43]"></a>DrvGPIO_InitFunction</STRONG> (Thumb, 1864 bytes, Stack size 8 bytes, drvgpio.o(i.DrvGPIO_InitFunction))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = DrvGPIO_InitFunction &rArr; __ARM_common_switch8
</UL>
<BR>[Calls]<UL><LI><a href="#[44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_common_switch8
</UL>
<BR>[Called By]<UL><LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrvTIMER_Open
</UL>

<P><STRONG><a name="[57]"></a>DrvGPIO_Open</STRONG> (Thumb, 110 bytes, Stack size 16 bytes, drvgpio.o(i.DrvGPIO_Open))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = DrvGPIO_Open
</UL>
<BR>[Called By]<UL><LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ad9850_Port_Init
<LI><a href="#[53]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Port_Init
<LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OpenKeyPad
</UL>

<P><STRONG><a name="[5b]"></a>DrvGPIO_SetBit</STRONG> (Thumb, 36 bytes, Stack size 8 bytes, drvgpio.o(i.DrvGPIO_SetBit))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = DrvGPIO_SetBit
</UL>
<BR>[Called By]<UL><LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setup_AD9850
<LI><a href="#[38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ad9850_wr_parrel
<LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ad9850_reset
<LI><a href="#[2b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Timer0_Callback
<LI><a href="#[5a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Scankey
</UL>

<P><STRONG><a name="[72]"></a>DrvSYS_Delay</STRONG> (Thumb, 34 bytes, Stack size 0 bytes, drvsys.o(i.DrvSYS_Delay))
<BR><BR>[Called By]<UL><LI><a href="#[38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[4f]"></a>DrvSYS_GetExtClockFreq</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, drvsys.o(i.DrvSYS_GetExtClockFreq))
<BR><BR>[Called By]<UL><LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetTimerClock
</UL>

<P><STRONG><a name="[45]"></a>DrvSYS_GetHCLKFreq</STRONG> (Thumb, 92 bytes, Stack size 16 bytes, drvsys.o(i.DrvSYS_GetHCLKFreq))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = DrvSYS_GetHCLKFreq &rArr; DrvSYS_GetPLLClockFreq
</UL>
<BR>[Calls]<UL><LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrvSYS_GetPLLClockFreq
<LI><a href="#[42]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetTimerClock
</UL>

<P><STRONG><a name="[46]"></a>DrvSYS_GetPLLClockFreq</STRONG> (Thumb, 104 bytes, Stack size 32 bytes, drvsys.o(i.DrvSYS_GetPLLClockFreq))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = DrvSYS_GetPLLClockFreq
</UL>
<BR>[Calls]<UL><LI><a href="#[42]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[45]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrvSYS_GetHCLKFreq
</UL>

<P><STRONG><a name="[47]"></a>DrvSYS_SelectHCLKSource</STRONG> (Thumb, 46 bytes, Stack size 8 bytes, drvsys.o(i.DrvSYS_SelectHCLKSource))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = DrvSYS_SelectHCLKSource &rArr; SystemCoreClockUpdate
</UL>
<BR>[Calls]<UL><LI><a href="#[48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemCoreClockUpdate
</UL>
<BR>[Called By]<UL><LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Init_Devices
</UL>

<P><STRONG><a name="[49]"></a>DrvSYS_SetClockDivider</STRONG> (Thumb, 128 bytes, Stack size 16 bytes, drvsys.o(i.DrvSYS_SetClockDivider))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = DrvSYS_SetClockDivider &rArr; SystemCoreClockUpdate
</UL>
<BR>[Calls]<UL><LI><a href="#[48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemCoreClockUpdate
</UL>
<BR>[Called By]<UL><LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Init_Devices
</UL>

<P><STRONG><a name="[51]"></a>DrvSYS_SetOscCtrl</STRONG> (Thumb, 118 bytes, Stack size 8 bytes, drvsys.o(i.DrvSYS_SetOscCtrl))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = DrvSYS_SetOscCtrl
</UL>
<BR>[Called By]<UL><LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Init_Devices
</UL>

<P><STRONG><a name="[4a]"></a>DrvTIMER_EnableInt</STRONG> (Thumb, 78 bytes, Stack size 16 bytes, drvtimer.o(i.DrvTIMER_EnableInt))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = DrvTIMER_EnableInt &rArr; NVIC_SetPriority
</UL>
<BR>[Calls]<UL><LI><a href="#[4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NVIC_SetPriority
<LI><a href="#[4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NVIC_EnableIRQ
</UL>
<BR>[Called By]<UL><LI><a href="#[38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[67]"></a>DrvTIMER_Init</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, drvtimer.o(i.DrvTIMER_Init))
<BR><BR>[Called By]<UL><LI><a href="#[54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Timer0_Init
</UL>

<P><STRONG><a name="[4d]"></a>DrvTIMER_Open</STRONG> (Thumb, 652 bytes, Stack size 40 bytes, drvtimer.o(i.DrvTIMER_Open))
<BR><BR>[Stack]<UL><LI>Max Depth = 104<LI>Call Chain = DrvTIMER_Open &rArr; GetTimerClock &rArr; DrvSYS_GetHCLKFreq &rArr; DrvSYS_GetPLLClockFreq
</UL>
<BR>[Calls]<UL><LI><a href="#[43]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrvGPIO_InitFunction
<LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetTimerClock
<LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CalTimerInitValue
</UL>
<BR>[Called By]<UL><LI><a href="#[54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Timer0_Init
</UL>

<P><STRONG><a name="[68]"></a>DrvTIMER_SetTimerEvent</STRONG> (Thumb, 448 bytes, Stack size 36 bytes, drvtimer.o(i.DrvTIMER_SetTimerEvent))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = DrvTIMER_SetTimerEvent
</UL>
<BR>[Called By]<UL><LI><a href="#[54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Timer0_Init
</UL>

<P><STRONG><a name="[55]"></a>DrvTIMER_Start</STRONG> (Thumb, 54 bytes, Stack size 0 bytes, drvtimer.o(i.DrvTIMER_Start))
<BR><BR>[Called By]<UL><LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Init_Devices
</UL>

<P><STRONG><a name="[d]"></a>EINT0_IRQHandler</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, drvgpio.o(i.EINT0_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = EINT0_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_nuc1xx.o(RESET)
</UL>
<P><STRONG><a name="[e]"></a>EINT1_IRQHandler</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, drvgpio.o(i.EINT1_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = EINT1_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_nuc1xx.o(RESET)
</UL>
<P><STRONG><a name="[62]"></a>ENTER_detect</STRONG> (Thumb, 52 bytes, Stack size 0 bytes, mainsource0728ver2.o(i.ENTER_detect))
<BR><BR>[Called By]<UL><LI><a href="#[2b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Timer0_Callback
</UL>

<P><STRONG><a name="[f]"></a>GPAB_IRQHandler</STRONG> (Thumb, 52 bytes, Stack size 16 bytes, drvgpio.o(i.GPAB_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = GPAB_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_nuc1xx.o(RESET)
</UL>
<P><STRONG><a name="[10]"></a>GPCDE_IRQHandler</STRONG> (Thumb, 56 bytes, Stack size 16 bytes, drvgpio.o(i.GPCDE_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = GPCDE_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_nuc1xx.o(RESET)
</UL>
<P><STRONG><a name="[65]"></a>INCREASE_detect</STRONG> (Thumb, 100 bytes, Stack size 0 bytes, mainsource0728ver2.o(i.INCREASE_detect))
<BR><BR>[Called By]<UL><LI><a href="#[2b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Timer0_Callback
</UL>

<P><STRONG><a name="[50]"></a>Init_Devices</STRONG> (Thumb, 66 bytes, Stack size 8 bytes, mainsource0728ver2.o(i.Init_Devices))
<BR><BR>[Stack]<UL><LI>Max Depth = 120<LI>Call Chain = Init_Devices &rArr; Timer0_Init &rArr; DrvTIMER_Open &rArr; GetTimerClock &rArr; DrvSYS_GetHCLKFreq &rArr; DrvSYS_GetPLLClockFreq
</UL>
<BR>[Calls]<UL><LI><a href="#[55]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrvTIMER_Start
<LI><a href="#[51]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrvSYS_SetOscCtrl
<LI><a href="#[49]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrvSYS_SetClockDivider
<LI><a href="#[47]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrvSYS_SelectHCLKSource
<LI><a href="#[52]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrvADC_Open
<LI><a href="#[54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Timer0_Init
<LI><a href="#[53]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Port_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[59]"></a>Initial_pannel</STRONG> (Thumb, 526 bytes, Stack size 0 bytes, mainsource0728ver2.o(i.Initial_pannel))
<BR><BR>[Called By]<UL><LI><a href="#[38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[53]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Port_Init
</UL>

<P><STRONG><a name="[56]"></a>OpenKeyPad</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, mainsource0728ver2.o(i.OpenKeyPad))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = OpenKeyPad &rArr; DrvGPIO_Open
</UL>
<BR>[Calls]<UL><LI><a href="#[57]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrvGPIO_Open
</UL>
<BR>[Called By]<UL><LI><a href="#[53]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Port_Init
</UL>

<P><STRONG><a name="[26]"></a>PWRWU_IRQHandler</STRONG> (Thumb, 32 bytes, Stack size 8 bytes, drvsys.o(i.PWRWU_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = PWRWU_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_nuc1xx.o(RESET)
</UL>
<P><STRONG><a name="[53]"></a>Port_Init</STRONG> (Thumb, 36 bytes, Stack size 8 bytes, mainsource0728ver2.o(i.Port_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = Port_Init &rArr; ad9850_Port_Init &rArr; DrvGPIO_Open
</UL>
<BR>[Calls]<UL><LI><a href="#[57]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrvGPIO_Open
<LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ad9850_Port_Init
<LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OpenKeyPad
<LI><a href="#[59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Initial_pannel
</UL>
<BR>[Called By]<UL><LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Init_Devices
</UL>

<P><STRONG><a name="[19]"></a>SPI0_IRQHandler</STRONG> (Thumb, 92 bytes, Stack size 8 bytes, drvspi.o(i.SPI0_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = SPI0_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_nuc1xx.o(RESET)
</UL>
<P><STRONG><a name="[1a]"></a>SPI1_IRQHandler</STRONG> (Thumb, 92 bytes, Stack size 8 bytes, drvspi.o(i.SPI1_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = SPI1_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_nuc1xx.o(RESET)
</UL>
<P><STRONG><a name="[1b]"></a>SPI2_IRQHandler</STRONG> (Thumb, 92 bytes, Stack size 8 bytes, drvspi.o(i.SPI2_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = SPI2_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_nuc1xx.o(RESET)
</UL>
<P><STRONG><a name="[1c]"></a>SPI3_IRQHandler</STRONG> (Thumb, 92 bytes, Stack size 8 bytes, drvspi.o(i.SPI3_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = SPI3_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_nuc1xx.o(RESET)
</UL>
<P><STRONG><a name="[5a]"></a>Scankey</STRONG> (Thumb, 108 bytes, Stack size 24 bytes, mainsource0728ver2.o(i.Scankey))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = Scankey &rArr; DrvGPIO_SetBit
</UL>
<BR>[Calls]<UL><LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrvGPIO_SetBit
<LI><a href="#[5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrvGPIO_GetBit
<LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrvGPIO_ClrBit
<LI><a href="#[5d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delay
</UL>
<BR>[Called By]<UL><LI><a href="#[2b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Timer0_Callback
</UL>

<P><STRONG><a name="[60]"></a>SetPACA</STRONG> (Thumb, 238 bytes, Stack size 0 bytes, mainsource0728ver2.o(i.SetPACA))
<BR><BR>[Called By]<UL><LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;clr_all_pannal
<LI><a href="#[5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Show_Word
</UL>

<P><STRONG><a name="[5f]"></a>Show_Word</STRONG> (Thumb, 146 bytes, Stack size 40 bytes, mainsource0728ver2.o(i.Show_Word))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = Show_Word
</UL>
<BR>[Calls]<UL><LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WriteData
<LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetPACA
</UL>
<BR>[Called By]<UL><LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;print_lcd
</UL>

<P><STRONG><a name="[48]"></a>SystemCoreClockUpdate</STRONG> (Thumb, 130 bytes, Stack size 16 bytes, system_nuc1xx.o(i.SystemCoreClockUpdate))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = SystemCoreClockUpdate
</UL>
<BR>[Calls]<UL><LI><a href="#[42]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[49]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrvSYS_SetClockDivider
<LI><a href="#[47]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrvSYS_SelectHCLKSource
</UL>

<P><STRONG><a name="[29]"></a>SystemInit</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, system_nuc1xx.o(i.SystemInit))
<BR>[Address Reference Count : 1]<UL><LI> startup_nuc1xx.o(.text)
</UL>
<P><STRONG><a name="[13]"></a>TMR0_IRQHandler</STRONG> (Thumb, 144 bytes, Stack size 8 bytes, drvtimer.o(i.TMR0_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = TMR0_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_nuc1xx.o(RESET)
</UL>
<P><STRONG><a name="[14]"></a>TMR1_IRQHandler</STRONG> (Thumb, 144 bytes, Stack size 8 bytes, drvtimer.o(i.TMR1_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = TMR1_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_nuc1xx.o(RESET)
</UL>
<P><STRONG><a name="[15]"></a>TMR2_IRQHandler</STRONG> (Thumb, 144 bytes, Stack size 8 bytes, drvtimer.o(i.TMR2_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = TMR2_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_nuc1xx.o(RESET)
</UL>
<P><STRONG><a name="[16]"></a>TMR3_IRQHandler</STRONG> (Thumb, 144 bytes, Stack size 8 bytes, drvtimer.o(i.TMR3_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = TMR3_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_nuc1xx.o(RESET)
</UL>
<P><STRONG><a name="[2b]"></a>Timer0_Callback</STRONG> (Thumb, 74 bytes, Stack size 8 bytes, mainsource0728ver2.o(i.Timer0_Callback))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = Timer0_Callback &rArr; Scankey &rArr; DrvGPIO_SetBit
</UL>
<BR>[Calls]<UL><LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrvGPIO_SetBit
<LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrvGPIO_ClrBit
<LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UP_detect
<LI><a href="#[5a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Scankey
<LI><a href="#[65]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;INCREASE_detect
<LI><a href="#[62]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ENTER_detect
<LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DOWN_detect
<LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DECREASE_detect
</UL>
<BR>[Address Reference Count : 1]<UL><LI> mainsource0728ver2.o(i.Timer0_Init)
</UL>
<P><STRONG><a name="[54]"></a>Timer0_Init</STRONG> (Thumb, 30 bytes, Stack size 8 bytes, mainsource0728ver2.o(i.Timer0_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 112<LI>Call Chain = Timer0_Init &rArr; DrvTIMER_Open &rArr; GetTimerClock &rArr; DrvSYS_GetHCLKFreq &rArr; DrvSYS_GetPLLClockFreq
</UL>
<BR>[Calls]<UL><LI><a href="#[68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrvTIMER_SetTimerEvent
<LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrvTIMER_Open
<LI><a href="#[67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrvTIMER_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Init_Devices
</UL>

<P><STRONG><a name="[64]"></a>UP_detect</STRONG> (Thumb, 52 bytes, Stack size 0 bytes, mainsource0728ver2.o(i.UP_detect))
<BR><BR>[Called By]<UL><LI><a href="#[2b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Timer0_Callback
</UL>

<P><STRONG><a name="[c]"></a>WDT_IRQHandler</STRONG> (Thumb, 42 bytes, Stack size 8 bytes, drvtimer.o(i.WDT_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = WDT_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_nuc1xx.o(RESET)
</UL>
<P><STRONG><a name="[61]"></a>WriteData</STRONG> (Thumb, 82 bytes, Stack size 0 bytes, mainsource0728ver2.o(i.WriteData))
<BR><BR>[Called By]<UL><LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;clr_all_pannal
<LI><a href="#[5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Show_Word
</UL>

<P><STRONG><a name="[44]"></a>__ARM_common_switch8</STRONG> (Thumb, 28 bytes, Stack size 8 bytes, mainsource0728ver2.o(i.__ARM_common_switch8))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = __ARM_common_switch8
</UL>
<BR>[Called By]<UL><LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;itodegree
<LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;in_de_degree
<LI><a href="#[43]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrvGPIO_InitFunction
</UL>

<P><STRONG><a name="[58]"></a>ad9850_Port_Init</STRONG> (Thumb, 124 bytes, Stack size 8 bytes, mainsource0728ver2.o(i.ad9850_Port_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = ad9850_Port_Init &rArr; DrvGPIO_Open
</UL>
<BR>[Calls]<UL><LI><a href="#[57]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrvGPIO_Open
</UL>
<BR>[Called By]<UL><LI><a href="#[53]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Port_Init
</UL>

<P><STRONG><a name="[69]"></a>ad9850_reset</STRONG> (Thumb, 68 bytes, Stack size 8 bytes, mainsource0728ver2.o(i.ad9850_reset))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = ad9850_reset &rArr; DrvGPIO_SetBit
</UL>
<BR>[Calls]<UL><LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrvGPIO_SetBit
<LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrvGPIO_ClrBit
</UL>
<BR>[Called By]<UL><LI><a href="#[38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[6a]"></a>ad9850_wr_parrel</STRONG> (Thumb, 196 bytes, Stack size 8 bytes, mainsource0728ver2.o(i.ad9850_wr_parrel))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = ad9850_wr_parrel &rArr; DrvGPIO_SetBit
</UL>
<BR>[Calls]<UL><LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrvGPIO_SetBit
<LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrvGPIO_ClrBit
</UL>
<BR>[Called By]<UL><LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setup_AD9850
</UL>

<P><STRONG><a name="[7a]"></a>atoifreq</STRONG> (Thumb, 42 bytes, Stack size 24 bytes, mainsource0728ver2.o(i.atoifreq))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = atoifreq
</UL>
<BR>[Called By]<UL><LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_proc404
</UL>

<P><STRONG><a name="[6b]"></a>clr_all_pannal</STRONG> (Thumb, 40 bytes, Stack size 8 bytes, mainsource0728ver2.o(i.clr_all_pannal))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = clr_all_pannal
</UL>
<BR>[Calls]<UL><LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WriteData
<LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetPACA
</UL>
<BR>[Called By]<UL><LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;display_ui_act
</UL>

<P><STRONG><a name="[5d]"></a>delay</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, mainsource0728ver2.o(i.delay))
<BR><BR>[Called By]<UL><LI><a href="#[5a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Scankey
</UL>

<P><STRONG><a name="[6c]"></a>display_ui_act</STRONG> (Thumb, 72 bytes, Stack size 20 bytes, mainsource0728ver2.o(i.display_ui_act))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = display_ui_act &rArr; print_lcd &rArr; Show_Word
</UL>
<BR>[Calls]<UL><LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;print_lcd
<LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;clr_all_pannal
</UL>
<BR>[Called By]<UL><LI><a href="#[81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_proc505
<LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_proc405
<LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_proc404
<LI><a href="#[78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_proc201
<LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_proc102
<LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_proc101
<LI><a href="#[75]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_proc0
<LI><a href="#[6f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;init_act
</UL>

<P><STRONG><a name="[7d]"></a>in_de</STRONG> (Thumb, 42 bytes, Stack size 0 bytes, mainsource0728ver2.o(i.in_de))
<BR><BR>[Called By]<UL><LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_proc408
<LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_proc407
<LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_proc406
</UL>

<P><STRONG><a name="[6e]"></a>in_de_degree</STRONG> (Thumb, 116 bytes, Stack size 4 bytes, mainsource0728ver2.o(i.in_de_degree))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = in_de_degree &rArr; __ARM_common_switch8
</UL>
<BR>[Calls]<UL><LI><a href="#[44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_common_switch8
</UL>
<BR>[Called By]<UL><LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_proc409
</UL>

<P><STRONG><a name="[6f]"></a>init_act</STRONG> (Thumb, 718 bytes, Stack size 8 bytes, mainsource0728ver2.o(i.init_act))
<BR><BR>[Stack]<UL><LI>Max Depth = 104<LI>Call Chain = init_act &rArr; display_ui_act &rArr; print_lcd &rArr; Show_Word
</UL>
<BR>[Calls]<UL><LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;itodegree
<LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;itoafreq
<LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;display_ui_act
</UL>
<BR>[Called By]<UL><LI><a href="#[38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[70]"></a>itoafreq</STRONG> (Thumb, 82 bytes, Stack size 40 bytes, mainsource0728ver2.o(i.itoafreq))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = itoafreq
</UL>
<BR>[Calls]<UL><LI><a href="#[42]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_proc405
<LI><a href="#[6f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;init_act
</UL>

<P><STRONG><a name="[71]"></a>itodegree</STRONG> (Thumb, 80 bytes, Stack size 4 bytes, mainsource0728ver2.o(i.itodegree))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = itodegree &rArr; __ARM_common_switch8
</UL>
<BR>[Calls]<UL><LI><a href="#[44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_common_switch8
</UL>
<BR>[Called By]<UL><LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_proc405
<LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_proc102
<LI><a href="#[6f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;init_act
</UL>

<P><STRONG><a name="[38]"></a>main</STRONG> (Thumb, 114 bytes, Stack size 0 bytes, mainsource0728ver2.o(i.main))
<BR><BR>[Stack]<UL><LI>Max Depth = 120<LI>Call Chain = main &rArr; Init_Devices &rArr; Timer0_Init &rArr; DrvTIMER_Open &rArr; GetTimerClock &rArr; DrvSYS_GetHCLKFreq &rArr; DrvSYS_GetPLLClockFreq
</UL>
<BR>[Calls]<UL><LI><a href="#[4a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrvTIMER_EnableInt
<LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrvSYS_Delay
<LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrvGPIO_SetBit
<LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrvGPIO_ClrBit
<LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_state_proc
<LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setup_AD9850
<LI><a href="#[6f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;init_act
<LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ad9850_reset
<LI><a href="#[59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Initial_pannel
<LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Init_Devices
</UL>
<BR>[Called By]<UL><LI><a href="#[37]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry_main
</UL>

<P><STRONG><a name="[6d]"></a>print_lcd</STRONG> (Thumb, 44 bytes, Stack size 36 bytes, mainsource0728ver2.o(i.print_lcd))
<BR><BR>[Stack]<UL><LI>Max Depth = 76<LI>Call Chain = print_lcd &rArr; Show_Word
</UL>
<BR>[Calls]<UL><LI><a href="#[5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Show_Word
</UL>
<BR>[Called By]<UL><LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_proc409
<LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_proc408
<LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_proc407
<LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_proc406
<LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_proc405
<LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_proc404
<LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_proc102
<LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_proc101
<LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;display_ui_act
</UL>

<P><STRONG><a name="[73]"></a>setup_AD9850</STRONG> (Thumb, 564 bytes, Stack size 24 bytes, mainsource0728ver2.o(i.setup_AD9850))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = setup_AD9850 &rArr; ad9850_wr_parrel &rArr; DrvGPIO_SetBit
</UL>
<BR>[Calls]<UL><LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrvGPIO_SetBit
<LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrvGPIO_ClrBit
<LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ad9850_wr_parrel
<LI><a href="#[42]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[75]"></a>ui_proc0</STRONG> (Thumb, 88 bytes, Stack size 4 bytes, mainsource0728ver2.o(i.ui_proc0))
<BR><BR>[Stack]<UL><LI>Max Depth = 100<LI>Call Chain = ui_proc0 &rArr; display_ui_act &rArr; print_lcd &rArr; Show_Word
</UL>
<BR>[Calls]<UL><LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;display_ui_act
</UL>
<BR>[Called By]<UL><LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_state_proc
</UL>

<P><STRONG><a name="[76]"></a>ui_proc101</STRONG> (Thumb, 314 bytes, Stack size 8 bytes, mainsource0728ver2.o(i.ui_proc101))
<BR><BR>[Stack]<UL><LI>Max Depth = 104<LI>Call Chain = ui_proc101 &rArr; display_ui_act &rArr; print_lcd &rArr; Show_Word
</UL>
<BR>[Calls]<UL><LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;print_lcd
<LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;display_ui_act
</UL>
<BR>[Called By]<UL><LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_state_proc
</UL>

<P><STRONG><a name="[77]"></a>ui_proc102</STRONG> (Thumb, 342 bytes, Stack size 8 bytes, mainsource0728ver2.o(i.ui_proc102))
<BR><BR>[Stack]<UL><LI>Max Depth = 104<LI>Call Chain = ui_proc102 &rArr; display_ui_act &rArr; print_lcd &rArr; Show_Word
</UL>
<BR>[Calls]<UL><LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;print_lcd
<LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;itodegree
<LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;display_ui_act
</UL>
<BR>[Called By]<UL><LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_state_proc
</UL>

<P><STRONG><a name="[78]"></a>ui_proc201</STRONG> (Thumb, 112 bytes, Stack size 4 bytes, mainsource0728ver2.o(i.ui_proc201))
<BR><BR>[Stack]<UL><LI>Max Depth = 100<LI>Call Chain = ui_proc201 &rArr; display_ui_act &rArr; print_lcd &rArr; Show_Word
</UL>
<BR>[Calls]<UL><LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;display_ui_act
</UL>
<BR>[Called By]<UL><LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_state_proc
</UL>

<P><STRONG><a name="[79]"></a>ui_proc404</STRONG> (Thumb, 412 bytes, Stack size 8 bytes, mainsource0728ver2.o(i.ui_proc404))
<BR><BR>[Stack]<UL><LI>Max Depth = 104<LI>Call Chain = ui_proc404 &rArr; display_ui_act &rArr; print_lcd &rArr; Show_Word
</UL>
<BR>[Calls]<UL><LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;print_lcd
<LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;display_ui_act
<LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atoifreq
</UL>
<BR>[Called By]<UL><LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_state_proc
</UL>

<P><STRONG><a name="[7b]"></a>ui_proc405</STRONG> (Thumb, 348 bytes, Stack size 8 bytes, mainsource0728ver2.o(i.ui_proc405))
<BR><BR>[Stack]<UL><LI>Max Depth = 104<LI>Call Chain = ui_proc405 &rArr; display_ui_act &rArr; print_lcd &rArr; Show_Word
</UL>
<BR>[Calls]<UL><LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;print_lcd
<LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;itodegree
<LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;itoafreq
<LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;display_ui_act
</UL>
<BR>[Called By]<UL><LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_state_proc
</UL>

<P><STRONG><a name="[7c]"></a>ui_proc406</STRONG> (Thumb, 404 bytes, Stack size 8 bytes, mainsource0728ver2.o(i.ui_proc406))
<BR><BR>[Stack]<UL><LI>Max Depth = 84<LI>Call Chain = ui_proc406 &rArr; print_lcd &rArr; Show_Word
</UL>
<BR>[Calls]<UL><LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;print_lcd
<LI><a href="#[7d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;in_de
</UL>
<BR>[Called By]<UL><LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_state_proc
</UL>

<P><STRONG><a name="[7e]"></a>ui_proc407</STRONG> (Thumb, 404 bytes, Stack size 8 bytes, mainsource0728ver2.o(i.ui_proc407))
<BR><BR>[Stack]<UL><LI>Max Depth = 84<LI>Call Chain = ui_proc407 &rArr; print_lcd &rArr; Show_Word
</UL>
<BR>[Calls]<UL><LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;print_lcd
<LI><a href="#[7d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;in_de
</UL>
<BR>[Called By]<UL><LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_state_proc
</UL>

<P><STRONG><a name="[7f]"></a>ui_proc408</STRONG> (Thumb, 404 bytes, Stack size 8 bytes, mainsource0728ver2.o(i.ui_proc408))
<BR><BR>[Stack]<UL><LI>Max Depth = 84<LI>Call Chain = ui_proc408 &rArr; print_lcd &rArr; Show_Word
</UL>
<BR>[Calls]<UL><LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;print_lcd
<LI><a href="#[7d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;in_de
</UL>
<BR>[Called By]<UL><LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_state_proc
</UL>

<P><STRONG><a name="[80]"></a>ui_proc409</STRONG> (Thumb, 440 bytes, Stack size 8 bytes, mainsource0728ver2.o(i.ui_proc409))
<BR><BR>[Stack]<UL><LI>Max Depth = 84<LI>Call Chain = ui_proc409 &rArr; print_lcd &rArr; Show_Word
</UL>
<BR>[Calls]<UL><LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;print_lcd
<LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;in_de_degree
</UL>
<BR>[Called By]<UL><LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_state_proc
</UL>

<P><STRONG><a name="[81]"></a>ui_proc505</STRONG> (Thumb, 112 bytes, Stack size 4 bytes, mainsource0728ver2.o(i.ui_proc505))
<BR><BR>[Stack]<UL><LI>Max Depth = 100<LI>Call Chain = ui_proc505 &rArr; display_ui_act &rArr; print_lcd &rArr; Show_Word
</UL>
<BR>[Calls]<UL><LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;display_ui_act
</UL>
<BR>[Called By]<UL><LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_state_proc
</UL>

<P><STRONG><a name="[74]"></a>ui_state_proc</STRONG> (Thumb, 144 bytes, Stack size 8 bytes, mainsource0728ver2.o(i.ui_state_proc))
<BR><BR>[Stack]<UL><LI>Max Depth = 112<LI>Call Chain = ui_state_proc &rArr; ui_proc405 &rArr; display_ui_act &rArr; print_lcd &rArr; Show_Word
</UL>
<BR>[Calls]<UL><LI><a href="#[81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_proc505
<LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_proc409
<LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_proc408
<LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_proc407
<LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_proc406
<LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_proc405
<LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_proc404
<LI><a href="#[78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_proc201
<LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_proc102
<LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_proc101
<LI><a href="#[75]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_proc0
</UL>
<BR>[Called By]<UL><LI><a href="#[38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>
<P>
<H3>
Local Symbols
</H3>
<P><STRONG><a name="[20]"></a>Default_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_nuc1xx.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Default_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Default_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_nuc1xx.o(RESET)
</UL>
<P><STRONG><a name="[41]"></a>CalTimerInitValue</STRONG> (Thumb, 70 bytes, Stack size 24 bytes, drvtimer.o(i.CalTimerInitValue))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = CalTimerInitValue
</UL>
<BR>[Calls]<UL><LI><a href="#[42]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrvTIMER_Open
</UL>

<P><STRONG><a name="[4e]"></a>GetTimerClock</STRONG> (Thumb, 90 bytes, Stack size 16 bytes, drvtimer.o(i.GetTimerClock))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = GetTimerClock &rArr; DrvSYS_GetHCLKFreq &rArr; DrvSYS_GetPLLClockFreq
</UL>
<BR>[Calls]<UL><LI><a href="#[45]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrvSYS_GetHCLKFreq
<LI><a href="#[4f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrvSYS_GetExtClockFreq
</UL>
<BR>[Called By]<UL><LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrvTIMER_Open
</UL>

<P><STRONG><a name="[4c]"></a>NVIC_EnableIRQ</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, drvtimer.o(i.NVIC_EnableIRQ))
<BR><BR>[Called By]<UL><LI><a href="#[4a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrvTIMER_EnableInt
</UL>

<P><STRONG><a name="[4b]"></a>NVIC_SetPriority</STRONG> (Thumb, 110 bytes, Stack size 8 bytes, drvtimer.o(i.NVIC_SetPriority))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = NVIC_SetPriority
</UL>
<BR>[Called By]<UL><LI><a href="#[4a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrvTIMER_EnableInt
</UL>
<P>
<H3>
Undefined Global Symbols
</H3>
<P><STRONG><a name="[3f]"></a>_call_atexit_fns</STRONG> (ARM, 0 bytes, Stack size 0 bytes, UNDEFINED)
<BR><BR>[Called By]<UL><LI><a href="#[39]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;exit
</UL>
<HR></body></html>
